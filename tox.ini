[tox]
minversion = 4.0.0
envlist = linters
ignore_base_python_conflict = True

[testenv]
basepython = python3
usedevelop = True
passenv = *
setenv =
   ANSIBLE_SKIP_CONFLICT_CHECK=1
   ANSIBLE_ACTION_PLUGINS={toxinidir}/ci_framework/roles.galaxy/config_template/action:{toxinidir}/ci_framework/ansible_plugins/action
   ANSIBLE_CALLBACK_PLUGINS={toxinidir}/ci_framework/ansible_plugins/callback
   ANSIBLE_FILTER_PLUGINS={toxinidir}/ci_framework/ansible_plugins/filter
   ANSIBLE_LIBRARY={toxinidir}/ci_framework/roles.galaxy/config_template/library:{toxinidir}/ci_framework/ansible_plugins/modules
   ANSIBLE_MODULE_UTILS={toxinidir}/ci_framework/ansible_plugins/module_utils
   ANSIBLE_ROLES_PATH={toxinidir}/ci_framework/roles.galaxy:{toxinidir}/ci_framework/roles
   ANSIBLE_INVENTORY={toxinidir}/tests/hosts.ini
   ANSIBLE_NOCOWS=1
   ANSIBLE_RETRY_FILES_ENABLED=0
   ANSIBLE_STDOUT_CALLBACK=debug
   ANSIBLE_LOG_PATH={envlogdir}/ansible-execution.log
   VIRTUAL_ENV={envdir}
   LC_ALL=en_US.UTF-8
   # pip: Avoid 2020-01-01 warnings: https://github.com/pypa/pip/issues/6207
   # paramiko CryptographyDeprecationWarning: https://github.com/ansible/ansible/issues/52598
   PYTHONWARNINGS=ignore:DEPRECATION::pip._internal.cli.base_command,ignore::UserWarning
   PIP_DISABLE_PIP_VERSION_CHECK=1
sitepackages = True
deps =
   -r {toxinidir}/requirements.txt
   -r {toxinidir}/test-requirements.txt
commands =
# ansible-core 2.13.6 installed with py38 does not provide a way to set
# timeout with ansible-galaxy command.
   ansible-galaxy install --timeout=120 -fr {toxinidir}/requirements.yml
   stestr run {posargs}
allowlist_externals =
   bash
   tox
   true
   ansible-galaxy

[testenv:linters]
skip_install = True
sitepackages = False
deps =
   pre-commit
   virtualenv
commands =
   bash -c "ANSIBLE_ROLES_PATH='{toxinidir}/ci_framework/roles.galaxy' \
          ansible-galaxy install --timeout=120 -fr {toxinidir}/requirements.yml"
   python -m pre_commit run -a
