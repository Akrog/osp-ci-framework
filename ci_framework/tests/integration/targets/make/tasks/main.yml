---
- name: Create some directories
  ansible.builtin.file:
    path: "/tmp/{{ item }}"
    state: directory
  loop:
    - artifacts
    - logs
    - project_makefile

- name: Inject dummy Makefile
  ansible.builtin.copy:
    dest: /tmp/project_makefile/Makefile
    content: |
      .DEFAULT_GOAL := help
      .RECIPEPREFIX := >
      FOO_BAR ?= "toto"
      help:
      > @echo "This is the help thing showing ${FOO_BAR}"

- name: Run ci_make without any params
  register: no_params
  ci_make:
    target: help
    chdir: /tmp/project_makefile
    output_dir: /tmp/artifacts

- name: Inject some non-related file to validate index
  ansible.builtin.copy:
    dest: /tmp/artifacts/foobar
    content: |
      I'm a useless flag in here

- name: Run ci_make with a param
  register: with_params
  ci_make:
    target: help
    chdir: /tmp/project_makefile
    output_dir: /tmp/artifacts
    params:
      FOO_BAR: starwars

- name: Ensure we have correct output
  ansible.builtin.assert:
    that:
      - no_params.stdout == 'This is the help thing showing toto'
      - with_params.stdout == 'This is the help thing showing starwars'

- name: Try dry_run parameter
  ci_make:
    chdir: /tmp/project_makefile
    output_dir: /tmp/artifacts
    params:
      FOO_BAR: startrek
    dry_run: true

- name: Check generated files
  block:
    - name: Set files attributes
      ansible.builtin.set_fact:
        files_to_check:
          "/tmp/artifacts/ci_make_0_run_ci_make_without_any_params.sh":
            851df380c076eed2e5f40842157b4c72d12638db
          "/tmp/artifacts/ci_make_1_run_ci_make_with_a_param.sh":
            59cc6818417dd1ff1f0cced3377eed416cf5f889
          "/tmp/artifacts/ci_make_2_try_dry_run_parameter.sh":
            f5d4eb7c8ddcae82b6ecaa6181224efe9399a783
          "/tmp/logs/ci_make_0_run_ci_make_without_any_params.log":
            8dcc15e2dd273dda4f7120efc059274bd8d50a89
          "/tmp/logs/ci_make_1_run_ci_make_with_a_param.log":
            fa1fd735445ca641270e630a00303b5816bafff3
    - name: Gather files
      register: reproducer_scripts
      ansible.builtin.stat:
        path: "{{ item.key }}"
      loop: "{{ files_to_check|dict2items }}"

    - name: Assert file status
      ansible.builtin.assert:
        that:
          - item.stat.exists is defined
          - item.stat.exists|bool
          - item.stat.checksum == files_to_check[item.stat.path]
      loop: "{{ reproducer_scripts.results }}"
