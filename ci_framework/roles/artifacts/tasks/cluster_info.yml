---
# Note if any of the tasks fail, we will still try to collect the data
# from the cluster. This is because we want to collect as much data as
# possible, even if the cluster is not in a good state so we use
# ignore_errors: true.

- name: Load generated parameters
  ansible.builtin.include_vars:
    dir: "{{ cifmw_artifacts_basedir }}/artifacts/parameters"
  ignore_errors: true

- name: Check for oc command
  ansible.builtin.command: command -v oc
  environment:
    PATH: "{{ cifmw_path | default(ansible_env.PATH) }}"
  register: oc_installed
  ignore_errors: true

- name: Collect data from cluster
  when:
    - oc_installed is defined
    - oc_installed.rc == 0
    - cifmw_openshift_kubeconfig is defined
  block:
    - name: Create logs/edpm directory
      ansible.builtin.file:
        path: "{{ cifmw_artifacts_basedir }}/logs/edpm"
        state: directory

    - name: Collect data from openshift cluster
      changed_when: true
      ignore_errors: true
      environment:
        KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
        PATH: "{{ cifmw_path | default(ansible_env.PATH) }}"
      ansible.builtin.shell: |
        oc get {{ item }} > {{ cifmw_artifacts_basedir }}/logs/edpm/{{ item }}.log
      loop:
        - secrets
        - pv
        - events
        - routes
        - all

    - name: Collect install plan related datas
      changed_when: true
      ignore_errors: true
      environment:
        KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
        PATH: "{{ cifmw_path | default(ansible_env.PATH) }}"
      ansible.builtin.shell: |
        oc describe installplan -n openstack-operators > {{ cifmw_artifacts_basedir }}/logs/edpm/install_plan.log

    - name: Dump the logs of all pods
      environment:
        KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
        PATH: "{{ cifmw_path | default(ansible_env.PATH) }}"
      ansible.builtin.shell: |
        for ns in openstack-operators openstack baremetal-operator-system openshift-machine-api; do
          oc get pods -n ${ns} > ${ns}_pods.txt
          mkdir -p "pods/${ns}"
          for pod in $(oc get pods -o name -n ${ns}); do
            pod_name=$(basename $pod)
            oc logs ${pod} -n ${ns} > "pods/${ns}/${pod_name}-logs.txt"
            oc get -o yaml ${pod} -n ${ns} > "pods/${ns}/${pod_name}.yaml"
            oc describe ${pod} -n ${ns} > "pods/${ns}/${pod_name}-describe.txt"
          done
        done
      args:
        chdir: "{{ cifmw_artifacts_basedir }}/logs/edpm"
      changed_when: true
      ignore_errors: true

    - name: Dump all openstack CRs
      environment:
        KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
        PATH: "{{ cifmw_path | default(ansible_env.PATH) }}"
      ansible.builtin.shell: |
        mkdir crs
        pushd crs
          all_crds=$(oc get crd | awk '/openstack/ { print $1}' | awk -F '.' '{print $1}')
          for cr in ${all_crds}; do
            echo ${crd}
            oc get -o yaml ${cr} > ${cr}.yaml
            oc describe ${cr} > ${cr}-describe.txt
          done
        popd
      args:
        chdir: "{{ cifmw_artifacts_basedir }}/logs/edpm"
      changed_when: true
      ignore_errors: true
